name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: simple_cms_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create .env.test file
      run: |
        echo "NODE_ENV=test" > .env.test
        echo "PORT=3001" >> .env.test
        echo "JWT_SECRET=test-secret-key" >> .env.test
        echo "TEST_DB_HOST=localhost" >> .env.test
        echo "TEST_DB_PORT=5432" >> .env.test
        echo "TEST_DB_NAME=simple_cms_test" >> .env.test
        echo "TEST_DB_USER=postgres" >> .env.test
        echo "TEST_DB_PASSWORD=password" >> .env.test
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Run workflow tests
      run: npm run test:workflows
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true